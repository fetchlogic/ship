#!/bin/bash

SSH="ssh -o ForwardAgent=yes"

case $# in
  0)
    while [[ "$PWD" != "/" ]]
    do
      if [[ -e ".ship" ]]
      then
        source .ship
        break
      fi

      cd ..
    done

    if [[ -n "$USER" && -n "$SERVER" && -n "DESTINATION" ]]
    then
      COMMANDS="cd $DESTINATION;"

      if [ -n "$BEFORE" ]
      then
        COMMANDS="$COMMANDS $BEFORE;"
      fi

      COMMANDS="$COMMANDS git pull origin master;"
      COMMANDS="$COMMANDS [ -e composer.json ] && composer install;"
      COMMANDS="$COMMANDS [ -e package.json ]  && npm install;"

      if [ -n "$AFTER" ]
      then
        COMMANDS="$COMMANDS $AFTER;"
      fi

      $SSH $USER@$SERVER "$COMMANDS"
    else
      if [[ -e ".ship" ]]
      then
        if [ -z "$USER" ]
        then
          MISSING="USER"
        elif [ -z "$SERVER" ]
        then
          MISSING="SERVER"
        elif [ -z "$DESTINATION" ]
        then
          MISSING="DESTINATION"
        fi

        echo "Error: .ship found, but is missing $MISSING."
      else
        echo "Error: Unable to locate .ship"
      fi

      exit 1
    fi
    ;;

  1)
    if [ "$1" == "init" ]
    then
      echo -n "Remote user to ship as [captain]: "
      read USER
      USER=${USER:-captain}

      echo -n "Server to deploy to: "
      read SERVER

      echo -n "Destination on server to deploy to: "
      read DESTINATION

      echo -n "Commands to run before shipment (optional): "
      read BEFORE

      echo -n "Commands to run after shipment (also optional): "
      read AFTER

      CLONEURL=`git config --get remote.origin.url`

      $SSH $USER@$SERVER "
        if [ -a $DESTINATION ]
        then
          echo "Error: Destination exists"
          exit 1
        else
          git clone $CLONEURL $DESTINATION
        fi
      "

      echo "USER=$USER"               >  .ship
      echo "SERVER=$SERVER"           >> .ship
      echo "DESTINATION=$DESTINATION" >> .ship

      if [ -n "$BEFORE" ]
      then
        echo "BEFORE=$BEFORE" >> .ship
      fi

      if [ -n "$AFTER" ]
      then
        echo "AFTER=$AFTER" >> .ship
      fi
    else
      echo "Error: Invalid argument '$1'"
    fi
    ;;

  *)
    echo "Usage: ship [init]"
    exit 1
    ;;
esac
